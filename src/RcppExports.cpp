// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// obs_galaxy
Rcpp::List obs_galaxy(Rcpp::DataFrame part_data, bool centre, double inc_rad);
RcppExport SEXP _SimSpin_obs_galaxy(SEXP part_dataSEXP, SEXP centreSEXP, SEXP inc_radSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type part_data(part_dataSEXP);
    Rcpp::traits::input_parameter< bool >::type centre(centreSEXP);
    Rcpp::traits::input_parameter< double >::type inc_rad(inc_radSEXP);
    rcpp_result_gen = Rcpp::wrap(obs_galaxy(part_data, centre, inc_rad));
    return rcpp_result_gen;
END_RCPP
}
// sim_galaxy
Rcpp::List sim_galaxy(Rcpp::DataFrame part_data, bool centre);
RcppExport SEXP _SimSpin_sim_galaxy(SEXP part_dataSEXP, SEXP centreSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type part_data(part_dataSEXP);
    Rcpp::traits::input_parameter< bool >::type centre(centreSEXP);
    rcpp_result_gen = Rcpp::wrap(sim_galaxy(part_data, centre));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SimSpin_obs_galaxy", (DL_FUNC) &_SimSpin_obs_galaxy, 3},
    {"_SimSpin_sim_galaxy", (DL_FUNC) &_SimSpin_sim_galaxy, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_SimSpin(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
