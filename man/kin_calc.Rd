% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kin_calc.R
\name{kin_calc}
\alias{kin_calc}
\title{Calculating the observed kinematics, \eqn{\lambda_R} and V/\eqn{\sigma}}
\usage{
kin_calc(obs_data, obs_images, axis_ratio, radius_type = "Both")
}
\arguments{
\item{obs_data}{The list output from the function \code{\link{obs_data_prep}}.}

\item{obs_images}{The list output from the function \code{\link{obs_imgs}} containing the flux,
velocity and dispersion images.}

\item{axis_ratio}{The axis ratio of the effective radius ellipse. This can be taken from the
output of \code{\link{obs_imgs}}, or another data frame can be provided containing the semi-major
(\code{$a}) and semi-minor axes (\code{$b}) in kpc.}

\item{radius_type}{The method of computing radii - "Circular" i.e. \eqn{r^{2} = x^{2} + y{2}} or
"Elliptical" where r is the semi-major axis of the ellipse having an axis ratio \eqn{b/a} on
which the pixel lies, i.e.
\eqn{r^{2} = \frac{x^{2} (1 - \epsilon)^{2} + y^{2}}{(1 - \epsilon)^2}}. Default is "Both" such
that both \eqn{\lambda_R} values are returned.}
}
\value{
Returns a list that contains:
\item{\code{$obs_lambdar}}{The observed spin parameter \eqn{\lambda_R} measured with circular
radii. \emph{(When \code{radius_type = "Both"} or \code{"Circular"}.)}}
\item{\code{$obs_elambdar}}{The observed spin parameter \eqn{\lambda_R} measured with elliptical
radii. \emph{(When \code{radius_type = "Both"} or \code{"Elliptical"}.)}}
\item{\code{$obs_vsigma}}{The observed V/\eqn{\sigma} value.}
\item{\code{$counts_img}}{The observed flux image.}
\item{\code{$velocity_img}}{The observed line-of-sight velocity image.}
\item{\code{$dispersion_img}}{The observed line-of-sight velocity dispersion image.}
}
\description{
The purpose of this function is to calculate the spin parameter, \eqn{\lambda_R},
and ratio V/\eqn{\sigma} that would be observed given an IFU data cube. You can either
supply the cube created by the \code{\link{ifu_cube}} function directly, or the blurred
cube created by \code{\link{blur_cube}}.
}
\examples{
galaxy_data = sim_data(system.file("extdata", 'SimSpin_example.hdf5', package="SimSpin"))
data        = obs_data_prep(simdata = galaxy_data)
fluxes      = flux_grid(obs_data = data, multi_thread=FALSE)
cube        = ifu_cube(obs_data  = data, flux_data = fluxes)
images      = obs_imgs(obs_data = data, ifu_datacube = cube)
kinematics  = kin_calc(obs_data = data, obs_images = images, axis_ratio = images$axis_ratio)
}
